#! /usr/bin/env ruby

$LOAD_PATH.unshift File.join(File.dirname(__FILE__), '..', 'lib')
require 'showoff'
require 'showoff/version'
require 'rubygems'
require 'gli'

include GLI

version ShowOff::VERSION

desc 'Generate assets (e.g. sections or slides) for your presentation'
arg_name 'asset_name'
long_desc "#{ShowOff::Utilities.generators.map {|k,v| "#{k} - #{v}" }.join("\n\n")}"
command [:g,:gen,:generate] do |c|

  c.desc "Force creation of the asset, even if one already exists with a similar name"
  c.switch [:f, :force]

  c.action do |global,local,args|

    asset_name = args.shift
    key_value_args = args.map {|arg| key, value = arg.split(/:|=/) ; [ key, value ] }.flatten
    parsed_arguments = Hash[*key_value_args]
    all_parameters = global.merge(local).merge(parsed_arguments)

    ShowOff::Utilities.generate(asset_name,all_parameters) if asset_name
  end

end

desc 'Serves the showoff presentation in the specified (or current) directory'
arg_name "[pres_dir]"
default_value "."
command [:s,:serve,:server] do |c|

  c.desc 'Show verbose messaging'
  c.switch :verbose

  c.desc 'Port on which to run'
  c.default_value "9090"
  c.flag [:p,:port]

  c.desc 'Host or ip to run on'
  c.default_value "localhost"
  c.flag [:h,:host]

  c.desc 'Showoff file used to describe presentation'
  c.default_value "showoff"
  c.flag [:f, :file]

  c.action do |global_options,options,args|

    url = "http://#{options[:h]}:#{options[:p].to_i}"
    puts "
-------------------------

Your ShowOff presentation is now starting up.

To view it plainly, visit [ #{url} ]

To run it from presenter view, go to: [ #{url}/presenter ]

-------------------------

"
    ShowOff::Server.run! :host => options[:h],
      :port => options[:p].to_i,
      :presentation_file => options[:f],
      :presentation_directory => args[0],
      :verbose => options[:verbose]

  end
end

desc 'Output the presentation in a particular format'
arg_name 'format_type'
arg_name '[pres_dir]'
long_desc "#{ShowOff::Utilities.statics.map {|k,v| "#{k} - #{v}" }.join("\n\n")}"
command [:static] do |c|

  c.desc "Force creation of the asset, even if one already exists with a similar name"
  c.switch [:f, :force]

  c.action do |global,local,args|
    
    format_type = args.shift
    filepath = args.shift
    key_value_args = args.map {|arg| key, value = arg.split(/:|=/) ; [ key, value ] }.flatten
    parsed_arguments = Hash[*key_value_args]
    all_parameters = global.merge(local).merge(parsed_arguments)
    
    all_parameters.merge!('filepath' => (filepath || "."))
    ShowOff::Utilities.static(format_type,all_parameters) if format_type
  end

end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  true
end

post do |global,command,options,args|
  # Post logic here
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
